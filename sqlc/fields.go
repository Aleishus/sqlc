// THIS FILE WAS AUTOGENERATED - ANY EDITS TO THIS WILL BE LOST WHEN IT IS REGENERATED

package sqlc



type stringField struct {
	name string
	table TableLike
}

type StringField interface {
	TableField
	Eq(value string) Condition
	IsEq(value StringField) JoinCondition
}

func (c *stringField) Name() string {
	return c.name
}

func (c *stringField) Table() string {
	return c.table.Name()
}

func (c *stringField) Eq(pred string) Condition {
	return Condition{Binding: FieldBinding{Value: pred, Field: c}}
}

func (c *stringField) IsEq(pred StringField) JoinCondition {
	return JoinCondition{Lhs: c, Rhs: pred, Predicate: EqPredicate}
}

func String(table TableLike, name string) StringField {
	return &stringField{name: name, table:table}
}

